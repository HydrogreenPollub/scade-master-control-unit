-- version swan: 2025.1 graph: 2.0
use SignalConditioningLogic as SignalConditioning;

use DataValidationLogic as DataValidation;

use DataTransmissionLogic as DataTransmission;

node MasterController (inputData : MasterControllerInput;)
  returns (outputData : MasterControllerOutput;)
{
  diagram
    (#6 block (MainStateMachine \ transitionCycles: 5000)
              #pragma diagram {"xy":"H69200;V-7600","wh":"20000;14000"} #end)
    (#0 block DataTransmission::ProtiumDataReception
              #pragma diagram {"xy":"H-54025;V23850","wh":"29750;14000"} #end)
    (#3 block DataTransmission::TelemetryDataTransmission
              #pragma diagram {"xy":"H159426;V-6650","wh":"27062;14000"} #end)
    (#27 block DataTransmission::ProtiumDataTransmission
               #pragma diagram {"xy":"H159426;V9550","wh":"27062;14000"} #end)
    (#7 block SignalConditioning::SignalConditioningIn
              #pragma diagram {"xy":"H-21775;V-6650","wh":"29750;14000"} #end)
    (#29 block DataTransmission::TelemetryDataReception
               #pragma diagram {"xy":"H-54025;V7650","wh":"29750;14000"} #end)
    (#33 block DataValidation::Validation
               #pragma diagram {"xy":"H23911;V-7600","wh":"25450;14000"} #end)
    (#28 block SignalConditioning::SignalConditioningOut
               #pragma diagram {"xy":"H114291;V-6650","wh":"25450;14000"} #end)
    (#54 expr (#56, #55)
      where
        (#56 group)
        (#55 group)
    #pragma diagram {"xy":"H47918;V-13054"} #end)
    (#59 expr #60.(emergencySwitch:isEmergencySwitchPressed,
    deadManSwitch:isDeadmansSwitchPressed,
    leakageSensorSwitch:isLeakageDetected,
    hydrogenLeakage:hydrogenLeakageVoltage,
    supercapacitorCurrent:supercapacitorCurrent,
    accelPedalVoltage:accelPedalVoltage,
    brakePedalVoltage:brakePedalVoltage,
    accessoryBatteryCurrent:accessoryBatteryCurrent,
    hydrogenHighPressure:hydrogenHighPressure,
    fuelCellOutputCurrent:fuelCellOutputCurrent,
    motorControllerSupplyCurrent:motorControllerSupplyCurrent,
    accessoryBatteryVoltage:accessoryBatteryVoltage,
    fuelCellOutputVoltage:fuelCellOutputVoltage,
    supercapacitorVoltage:supercapacitorVoltage,
    motorControllerSupplyVoltage:motorControllerSupplyVoltage,
    speed:speed)
      where
        (#60 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H5448;V-7600"} #end)
    (#91 expr #92.(isVehicleAllowedToMove:isVehicleAllowedToDrive,
    startBtn:isStartButtonPressed,
    resetBtn:isResetButtonPressed,
    brakePedalVoltage:brakePedalVoltage,
    accelPedalVoltage:accelerationPedalVoltage)
      where
        (#92 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H53759;V-7600"} #end)
    (#93 expr (#94, #95)
      where
        (#94 group)
        (#95 group)
    #pragma diagram {"xy":"H-3;V-13054"} #end)
    (#57 expr #58.(shouldProtiumRun:shouldProtiumRun,
    canAccelerate:canAccelerate,
    canRecuperate:canRecuperate,
    accelerationValueRaw:accelerationValueRaw,
    recuperationValueRaw:recuperationValueRaw)
      where
        (#58 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H96224;V-8825"} #end)
    (#79 expr (#105, #104)
      where
        (#105 group)
        (#104 group)
    #pragma diagram {"xy":"H133561;V-13054"} #end)
    (#107 expr (#109, #110)
      where
        (#109 group)
        (#110 group)
    #pragma diagram {"xy":"H90482;V-13054"} #end)
    (#1 expr inputData
    #pragma diagram {"xy":"H-102661;V-12050","wh":"14000;3200"} #end)
    (#2 group
    #pragma diagram {"xy":"H-89736;V-12050","wh":"800;14000"} #end)
    (#4 expr #5.(
    emergencySwitch:isEmergencySwitchPressed,
    deadManSwitch:isDeadmansSwitchPressed,
    leakageSensorSwitch:isLeakageDetected,
    supercapacitorCurrent:supercapacitorCurrent,
    accessoryBatteryCurrent:accessoryBatteryCurrent,
    hydrogenHighPressure:hydrogenHighPressure,
    fuelCellOutputCurrent:fuelCellOutputCurrent,
    motorControllerSupplyCurrent:motorControllerSupplyCurrent,
    accessoryBatteryVoltage:accessoryBatteryVoltage,
    fuelCellOutputVoltage:fuelCellOutputVoltage,
    supercapacitorVoltage:supercapacitorVoltage,
    motorControllerSupplyVoltage:motorControllerSupplyVoltage,
    speed:speed,
    
    shouldProtiumRun:shouldProtiumRun,
    canAccelerate:canAccelerate,
    canRecuperate:canRecuperate,
    
    isMainValveOpen: isMainValveOpen,
    isMotorControllerEnabled: isMotorControllerEnabled,
    brakeVoltage: brakeVoltage,
    accelerationVoltage: accelerationVoltage
    )
      where
        (#5 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H189345;V-9554"} #end)
    (#25 expr #26.(
    isMainValveOpen: placeholderInput
    )
      where
        (#26 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H139928;V-9554"} #end)
    (#8 def outputData
    #pragma diagram {"xy":"H203829;V-9554","wh":"14000;3200"} #end)
    (#13 expr #14.(
    telemetryRxByte:telemetryRxByte,
    telemetryRxReady:telemetryRxReady
    )
      where
        (#14 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H-78356;V6050"} #end)
    (#9 expr (#11, #10)
      where
        (#10 group)
        (#11 group)
    #pragma diagram {"xy":"H181460;V-13054"} #end)
    (#15 expr #16.(
    supercapacitorCurrentRaw:supercapacitorCurrentRaw,
    accelPedalRaw:accelPedalRaw,
    brakePedalRaw:brakePedalRaw,
    accessoryBatteryCurrentRaw:accessoryBatteryCurrentRaw,
    hydrogenHighPressureRaw:hydrogenHighPressureRaw,
    hydrogenLeakageRaw:hydrogenLeakageRaw,
    
    fuelCellOutputCurrentRaw:fuelCellOutputCurrentRaw,
    motorControllerSupplyCurrentRaw:motorControllerSupplyCurrentRaw,
    
    accessoryBatteryVoltageRaw:accessoryBatteryVoltageRaw,
    fuelCellOutputVoltageRaw:fuelCellOutputVoltageRaw,
    supercapacitorVoltageRaw:supercapacitorVoltageRaw,
    motorControllerSupplyVoltageRaw:motorControllerSupplyVoltageRaw,
    
    speedSensorPulseRaw:speedSensorPulseRaw,
    startBtnRaw:startBtnRaw,
    deadManSwitchRaw:deadManSwitchRaw,
    emergencySwitchRaw:emergencySwitchRaw,
    resetBtnRaw:resetBtnRaw,
    calibrationBtnRaw:calibrationBtnRaw,
    leakageSensorSwitchRaw:leakageSensorSwitchRaw,
    shellTelemetryEmergencyRelayRaw:shellTelemetryEmergencyRelayRaw,
    rpmHz:rpmHz
    )
      where
        (#16 group)
    #pragma diagram {"IsGraphicalVariant":true,"xy":"H-78356;V-7600"} #end)
    
    (#96 wire #91 => #6)
    (#97 wire #93 => #56
    #pragma diagram {"wp":"v-3200|#93 #56"} #end)
    (#111 wire #107 => #58
    #pragma diagram {"wp":"v4229|#107 #58"} #end)
    (#112 wire #57 => #28)
    (#106 wire #28 => #104
    #pragma diagram {"wp":"v-5804|#28 #104"} #end)
    (#98 wire #59 => #33)
    (#99 wire #33 => #55
    #pragma diagram {"wp":"v-4854|#33 #55"} #end)
    (#100 wire #54 => #92
    #pragma diagram {"wp":"v5454|#54 #92"} #end)
    (#101 wire #93 => #60
    #pragma diagram {"wp":"v5454|#93 #60"} #end)
    (#102 wire #7 => #94
    #pragma diagram {"wp":"v432|#7 h2624 v-10036 #94"} #end)
    (#103 wire #29 => #95
    #pragma diagram {"wp":"v0|#29 h36123 v-20104 #95"} #end)
    (#113 wire #107 => #105
    #pragma diagram {"wp":"v-3200|#107 #105"} #end)
    (#114 wire #54 => #109
    #pragma diagram {"wp":"v-3200|#54 #109"} #end)
    (#115 wire #6 => #110
    #pragma diagram {"wp":"v-4854|#6 #110"} #end)
    (#24 wire #9 => #5
    #pragma diagram {"wp":"v3500|#9 #5"} #end)
    (#18 wire #2 => #16
    #pragma diagram {"wp":"v4450|#2 #16"} #end)
    (#22 wire #79 => #11
    #pragma diagram {"wp":"v-3200|#79 #11"} #end)
    (#19 wire #15 => #7)
    (#23 wire #3 => #10
    #pragma diagram {"wp":"v-5804|#3 #10"} #end)
    (#17 wire #4 => #8)
    (#30 wire #79 => #26
    #pragma diagram {"wp":"v3500|#79 #26"} #end)
    (#31 wire #25 => #3)
    (#12 wire #1 => #2)
    (#20 wire #2 => #14
    #pragma diagram {"wp":"v5483|#2 h3490 v12617 #14"} #end)
    (#21 wire #13 => #29)
}

node MainStateMachine (transitionCycles : uint32;
                       isVehicleAllowedToDrive : bool;
                       isStartButtonPressed : bool;
                       isResetButtonPressed : bool;
                       brakePedalVoltage : float32;
                       accelerationPedalVoltage : float32;)
  returns (shouldProtiumRun : bool;
           isMainValveOpen : bool;
           isMotorControllerEnabled : bool;
           canAccelerate : bool;
           canRecuperate : bool;
           accelerationValueRaw : uint16;
           recuperationValueRaw : uint16;)
{
  diagram
    (var
        cyclesCounted: uint32;)
    (automaton $mainAutomaton
      state #1 Starting
      #pragma diagram {"xy":"h-16288;v-35725","wh":"53500;57196"} #end :
        diagram
          (#0 def isMainValveOpen
          #pragma diagram {"xy":"h12550;v-144","wh":"20000;3200"} #end)
          (#4 def isMotorControllerEnabled
          #pragma diagram {"xy":"h8550;v-4973","wh":"28000;3200"} #end)
          (#5 expr false
          #pragma diagram {"xy":"h-17750;v14343","wh":"10000;3200"} #end)
          (#6 def shouldProtiumRun
          #pragma diagram {"xy":"h12550;v4685","wh":"20000;3200"} #end)
          (#7 def canRecuperate
          #pragma diagram {"xy":"h13550;v14343","wh":"18000;3200"} #end)
          (#8 def canAccelerate
          #pragma diagram {"xy":"h13550;v9515","wh":"18000;3200"} #end)
          (#9 expr true
          #pragma diagram {"xy":"h-18750;v-4973"} #end)
          (#42 def cyclesCounted
          #pragma diagram {"xy":"h13750;v-14498","wh":"18000;3200"} #end)
          (#43 expr #44 + #45
            where
              (#44 group)
              (#45 group)
          #pragma diagram {"xy":"h-6475;v-14498"} #end)
          (#46 expr 1
          #pragma diagram {"xy":"h-18750;v-12598"} #end)
          (#47 expr #48 pre #49
            where
              (#48 group)
              (#49 group)
          #pragma diagram {"xy":"h14225;v-20098"} #end)
          (#50 expr 0
          #pragma diagram {"xy":"h-9775;v-21998"} #end)
          (#76 def recuperationValueRaw
          #pragma diagram {"xy":"h10750;v22998","wh":"24000;3200"} #end)
          (#77 def accelerationValueRaw
          #pragma diagram {"xy":"h10750;v18670","wh":"24000;3200"} #end)
          (#78 expr 0
          #pragma diagram {"xy":"h-18750;v18670"} #end)
          (#79 expr 0
          #pragma diagram {"xy":"h-18750;v22998"} #end)
          
          (#10 wire #5 => #8, #7
          #pragma diagram {"wp":"#5 h15800[v-4829 #8, #7]"} #end)
          (#11 wire #9 => #4, #0, #6
          #pragma diagram {"wp":"#9 h4825[h2650[#4, v4829 #0], v9658 #6]"} #end)
          (#51 wire #50 => #48)
          (#52 wire #47 => #44
          #pragma diagram {"wp":"#47 h3500 v-4500 h-37000 v8200 #44"} #end)
          (#53 wire #43 => #42, #49
          #pragma diagram {"wp":"#43 h4612[#42, v-3700 #49]"} #end)
          (#54 wire #46 => #45)
          (#80 wire #79 => #76)
          (#81 wire #78 => #77)
      state #2 Running
      #pragma diagram {"xy":"h117262;v-1954","wh":"149600;60661"} #end :
        diagram
          (#12 def isMotorControllerEnabled
          #pragma diagram {"xy":"h16886;v-19394","wh":"28000;3200"} #end)
          (#13 def isMainValveOpen
          #pragma diagram {"xy":"h20886;v-14565","wh":"20000;3200"} #end)
          (#14 expr true
          #pragma diagram {"xy":"h-41551;v-9736"} #end)
          (#15 def shouldProtiumRun
          #pragma diagram {"xy":"h20886;v-9736","wh":"20000;3200"} #end)
          (#16 def canRecuperate
          #pragma diagram {"xy":"h21886;v-77","wh":"18000;3200"} #end)
          (#17 def canAccelerate
          #pragma diagram {"xy":"h21886;v-4906","wh":"18000;3200"} #end)
          (#55 def cyclesCounted
          #pragma diagram {"xy":"h21886;v-24731","wh":"18000;3200"} #end)
          (#56 expr 0
          #pragma diagram {"xy":"h-42140;v-24731"} #end)
          (#59 def recuperationValueRaw
          #pragma diagram {"xy":"h58800;v20132","wh":"24000;3200"} #end)
          (#58 def accelerationValueRaw
          #pragma diagram {"xy":"h58800;v13132","wh":"24000;3200"} #end)
          (#57 block ControlAlgorithm
                     #pragma diagram {"xy":"h3800;v16632","wh":"20000;14000"} #end)
          (#61 expr accelerationPedalVoltage
          #pragma diagram {"xy":"h-56800;v20132","wh":"28000;3200"} #end)
          (#60 expr brakePedalVoltage
          #pragma diagram {"xy":"h-52800;v13132","wh":"20000;3200"} #end)
          
          (#18 wire #14 => #15, #13, #12, #17, #16
          #pragma diagram {"wp":"#14 h8055[h9109[h9110[h9109[#15, v4830 #17], v-4829 #13], v-9658 #12], v9659 #16]"} #end)
          (#62 wire #56 => #55)
          (#66 wire #57 .(recuperationValueRaw) => #59
          #pragma diagram {"wp":"v3500|#57 #59"} #end)
          (#65 wire #57 .(accelerationValueRaw) => #58
          #pragma diagram {"wp":"v-3500|#57 #58"} #end)
          (#64 wire #60 => #57 .(brakePedalVoltage))
          (#63 wire #61 => #57 .(accelerationPedalVoltage))
      state #3 Idle
      #pragma diagram {"xy":"h-101801;v-10940","wh":"58037;41506"} #end :
        diagram
          (#19 def isMainValveOpen
          #pragma diagram {"xy":"h15000;v4011","wh":"20000;3200"} #end)
          (#21 def isMotorControllerEnabled
          #pragma diagram {"xy":"h11000;v311","wh":"28000;3200"} #end)
          (#22 expr false
          #pragma diagram {"xy":"h-20000;v311","wh":"10000;3200"} #end)
          (#23 def shouldProtiumRun
          #pragma diagram {"xy":"h15000;v7711","wh":"20000;3200"} #end)
          (#24 def canRecuperate
          #pragma diagram {"xy":"h16000;v-3389","wh":"18000;3200"} #end)
          (#25 def canAccelerate
          #pragma diagram {"xy":"h16000;v-7089","wh":"18000;3200"} #end)
          (#67 def cyclesCounted
          #pragma diagram {"xy":"h16000;v-13343","wh":"18000;3200"} #end)
          (#68 expr 0
          #pragma diagram {"xy":"h-21000;v-13343"} #end)
          (#82 expr 0
          #pragma diagram {"xy":"h-15281;v16359"} #end)
          (#83 def recuperationValueRaw
          #pragma diagram {"xy":"h13019;v16359","wh":"24000;3200"} #end)
          (#84 def accelerationValueRaw
          #pragma diagram {"xy":"h13019;v12031","wh":"24000;3200"} #end)
          (#85 expr 0
          #pragma diagram {"xy":"h-15281;v12031"} #end)
          
          (#26 wire #22 => #23, #19, #21, #24, #25
          #pragma diagram {"wp":"#22 h4500[v7400 #23, h2000[v3700 #19, h2000[h2000[#21, v-3700 #24], v-7400 #25]]]"} #end)
          (#69 wire #68 => #67)
          (#86 wire #85 => #84)
          (#87 wire #82 => #83)
      state #20 ShuttingDown
      #pragma diagram {"xy":"h-16275;v26542","wh":"53525;56245"} #end :
        diagram
          (#27 def isMotorControllerEnabled
          #pragma diagram {"xy":"h7538;v-5559","wh":"28000;3200"} #end)
          (#28 def isMainValveOpen
          #pragma diagram {"xy":"h11538;v-730","wh":"20000;3200"} #end)
          (#29 expr false
          #pragma diagram {"xy":"h-17762;v4099","wh":"10000;3200"} #end)
          (#34 def shouldProtiumRun
          #pragma diagram {"xy":"h11538;v4099","wh":"20000;3200"} #end)
          (#35 def canRecuperate
          #pragma diagram {"xy":"h12538;v13757","wh":"18000;3200"} #end)
          (#36 def canAccelerate
          #pragma diagram {"xy":"h12538;v8928","wh":"18000;3200"} #end)
          (#70 expr 1
          #pragma diagram {"xy":"h-18762;v-12122"} #end)
          (#71 def cyclesCounted
          #pragma diagram {"xy":"h12762;v-14022","wh":"18000;3200"} #end)
          (#88 def recuperationValueRaw
          #pragma diagram {"xy":"h9538;v22522","wh":"24000;3200"} #end)
          (#89 expr 0
          #pragma diagram {"xy":"h-18762;v18195"} #end)
          (#90 def accelerationValueRaw
          #pragma diagram {"xy":"h9538;v18195","wh":"24000;3200"} #end)
          (#91 expr 0
          #pragma diagram {"xy":"h-18762;v22522"} #end)
          (#72 expr #100 pre #101
            where
              (#100 group)
              (#101 group)
          #pragma diagram {"xy":"h13238;v-19622"} #end)
          (#102 expr #103 + #104
            where
              (#103 group)
              (#104 group)
          #pragma diagram {"xy":"h-7462;v-14022"} #end)
          (#105 expr 0
          #pragma diagram {"xy":"h-10762;v-21522"} #end)
          
          (#37 wire #29 => #34, #28, #27, #36, #35
          #pragma diagram {"wp":"#29 h3500[h1000[h1000[h250[#34, v-4829 #28], v-9658 #27], v4829 #36], v9658 #35]"} #end)
          (#106 wire #105 => #100)
          (#92 wire #89 => #90)
          (#93 wire #91 => #88)
          (#107 wire #70 => #104)
          (#108 wire #72 => #103
          #pragma diagram {"wp":"#72 h3500 v-4500 h-37000 v8200 #103"} #end)
          (#109 wire #102 => #71, #101
          #pragma diagram {"wp":"#102 h4612[#71, v-3700 #101]"} #end)
      initial state #30 Init
      #pragma diagram {"xy":"h-171812;v-10445","wh":"58000;41026"} #end :
        diagram
          (#31 expr false
          #pragma diagram {"xy":"h-20000;v-184","wh":"10000;3200"} #end)
          (#32 def shouldProtiumRun
          #pragma diagram {"xy":"h15000;v7216","wh":"20000;3200"} #end)
          (#38 def isMainValveOpen
          #pragma diagram {"xy":"h15000;v3516","wh":"20000;3200"} #end)
          (#39 def isMotorControllerEnabled
          #pragma diagram {"xy":"h11000;v-184","wh":"28000;3200"} #end)
          (#40 def canAccelerate
          #pragma diagram {"xy":"h16000;v-3884","wh":"18000;3200"} #end)
          (#41 def canRecuperate
          #pragma diagram {"xy":"h16000;v-7584","wh":"18000;3200"} #end)
          (#73 def cyclesCounted
          #pragma diagram {"xy":"h16000;v-14636","wh":"18000;3200"} #end)
          (#74 expr 0
          #pragma diagram {"xy":"h-21000;v-14636"} #end)
          (#94 expr 0
          #pragma diagram {"xy":"h-15300;v16838"} #end)
          (#95 def recuperationValueRaw
          #pragma diagram {"xy":"h13000;v16838","wh":"24000;3200"} #end)
          (#96 def accelerationValueRaw
          #pragma diagram {"xy":"h13000;v12511","wh":"24000;3200"} #end)
          (#97 expr 0
          #pragma diagram {"xy":"h-15300;v12511"} #end)
          
          (#33 wire #31 => #32, #38, #39, #40, #41
          #pragma diagram {"wp":"#31 h4500[v7400 #32, h2000[v3700 #38, h2000[h2000[#39, v-3700 #40], v-7400 #41]]]"} #end)
          (#75 wire #74 => #73)
          (#98 wire #97 => #96)
          (#99 wire #94 => #95)
      :1: #1 until if (isVehicleAllowedToDrive and 
                       cyclesCounted > transitionCycles)
      restart #2
      #pragma diagram {"tp":"h26750;v16019|#1 h10667 h10667 h-74800;v-17751|#2"} #end;
      :1: #3 until if (isStartButtonPressed)
      restart #1
      #pragma diagram {"tp":"h29019;v-8470|#3 h9915 h9915 h-26750;v16315|#1"} #end;
      :1: #20 until if (cyclesCounted > transitionCycles)
      restart #3
      #pragma diagram {"tp":"h-26762;v-22426|#20 h-9915 h-9915 h29019;v15057|#3"} #end;
      :1: #2 until if (not isVehicleAllowedToDrive)
      restart #20
      #pragma diagram {"tp":"h-74800;v15352|#2 h-10658 h-10658 h26762;v-13144|#20"} #end;
      :1: #30 until 
      restart #3
      #pragma diagram {"tp":"h29000;v-128|#30 h3997 h3997 h-29019;v367|#3"} #end;
      #pragma diagram {"xy":"H-19077;V3256","wh":"409625;136645"} #end)
}

function ControlAlgorithm (brakePedalVoltage : float32;
                           accelerationPedalVoltage : float32;)
  returns (accelerationValueRaw : uint16;
           recuperationValueRaw : uint16;)
{
  diagram
    (#0 expr if #1 then #2 else #3
      where
        (#1 group)
        (#2 group)
        (#3 group)
    #pragma diagram {"xy":"H7962;V11588"} #end)
    (#4 expr brakePedalVoltage
    #pragma diagram {"xy":"H-22250;V-5612","wh":"20000;3200"} #end)
    (#5 expr #6 >= #7
      where
        (#6 group)
        (#7 group)
    #pragma diagram {"xy":"H-1250;V-3712"} #end)
    (#8 expr 1
    #pragma diagram {"xy":"H-16250;V-1812"} #end)
    (#9 expr brakePedalVoltage
    #pragma diagram {"xy":"H-93325;V40950","wh":"20000;3200"} #end)
    (#10 expr accelerationPedalVoltage
    #pragma diagram {"xy":"H-89325;V21100","wh":"28000;3200"} #end)
    (#11 expr (#12 :> uint16)
      where
        (#12 group)
    #pragma diagram {"xy":"H-12250;V21100","wh":"16000;7000"} #end)
    (#13 def accelerationValueRaw
    #pragma diagram {"xy":"H50138;V11588","wh":"24000;3200"} #end)
    (#14 def recuperationValueRaw
    #pragma diagram {"xy":"H29450;V42050","wh":"24000;3200"} #end)
    (#15 expr 0
    #pragma diagram {"xy":"H-16250;V9688"} #end)
    (#16 block (SignalConditioning::LinearMapping \ fromLow: 0, fromHigh: 5, toLow: 0, toHigh: 4095)
               #pragma diagram {"xy":"H-57788;V42050","wh":"20000;14000"} #end)
    (#17 expr #23 * #27
      where
        (#23 group)
        (#27 group)
    #pragma diagram {"xy":"H-29325;V42050"} #end)
    (#28 block (SignalConditioning::LinearMapping \ fromLow: 0.0, fromHigh: 5.0, toLow: 0.0, toHigh: 4095.0)
               #pragma diagram {"xy":"H-57788;V22150","wh":"20000;14000"} #end)
    (#18 expr (#19 :> uint16)
      where
        (#19 group)
    #pragma diagram {"xy":"H-12250;V42050","wh":"16000;7000"} #end)
    (#29 expr #31 * #32
      where
        (#31 group)
        (#32 group)
    #pragma diagram {"xy":"H-29325;V21100"} #end)
    (#33 expr 1/5
    #pragma diagram {"xy":"H-42406;V43950"} #end)
    (#34 expr 1/5
    #pragma diagram {"xy":"H-42406;V23000"} #end)
    
    (#20 wire #4 => #6)
    (#21 wire #8 => #7)
    (#22 wire #5 => #1
    #pragma diagram {"wp":"#5 h5712 #1"} #end)
    (#35 wire #33 => #27)
    (#24 wire #0 => #13)
    (#25 wire #15 => #2)
    (#26 wire #11 => #3
    #pragma diagram {"wp":"#11 h5106 v-7612 #3"} #end)
    (#36 wire #16 => #23
    #pragma diagram {"wp":"v-1900|#16 #23"} #end)
    (#37 wire #9 => #16 .(input))
    (#38 wire #10 => #28 .(input))
    (#30 wire #18 => #14)
    (#39 wire #17 => #19)
    (#40 wire #28 => #31
    #pragma diagram {"wp":"v-2950|#28 #31"} #end)
    (#41 wire #34 => #32)
    (#42 wire #29 => #12)
}

group MasterControllerInput = (
    supercapacitorCurrentRaw: uint16, 
    brakePedalRaw : uint16,
    accelPedalRaw : uint16,
    accessoryBatteryCurrentRaw : uint16,
    hydrogenHighPressureRaw : uint16,
    hydrogenLeakageRaw : uint16,
    fuelCellOutputCurrentRaw : uint16,
    motorControllerSupplyCurrentRaw : uint16,
    accessoryBatteryVoltageRaw : uint16,
    fuelCellOutputVoltageRaw : uint16,
    supercapacitorVoltageRaw : uint16,
    motorControllerSupplyVoltageRaw : uint16,
    speedSensorPulseRaw : bool,
    startBtnRaw : bool,
    deadManSwitchRaw : bool,
    emergencySwitchRaw : bool,
    resetBtnRaw : bool,
    calibrationBtnRaw : bool,
    leakageSensorSwitchRaw : bool,
    shellTelemetryEmergencyRelayRaw : bool,
    rpmHz : float32,
    telemetryRxReady : bool,
    telemetryRxByte: uint8
);

group MasterControllerOutput = (
    isEmergencySwitchPressed:bool,
    isDeadmansSwitchPressed:bool,
    isLeakageDetected:bool,
    supercapacitorCurrent:float32,
    accessoryBatteryCurrent:float32,
    hydrogenHighPressure:float32,
    fuelCellOutputCurrent:float32,
    motorControllerSupplyCurrent:float32,
    accessoryBatteryVoltage:float32,
    fuelCellOutputVoltage:float32,
    supercapacitorVoltage:float32,
    motorControllerSupplyVoltage:float32,
    speed:float32,
    
    shouldProtiumRun:bool,
    canAccelerate:bool,
    canRecuperate:bool,

    isMainValveOpen : bool,
    isMotorControllerEnabled : bool,
    brakeVoltage: uint16,
    accelerationVoltage: uint16
);
